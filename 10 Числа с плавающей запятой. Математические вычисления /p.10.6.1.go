/* Цель практической работы

Закрепить на практике полученные знания о числах с плавающей точкой, конверсии и преобразовании типов.


Что входит в работу

    Разложение ex в ряд Тейлора.
    Проблемы округления процентов.


Задание 1. Разложение ex в ряд Тейлора
Что нужно сделать

Напишите программу, вычисляющую ex посредством разложения в ряд Тейлора с заданной пользователем точностью. Пользователь вводит значение x и с точностью до какого знака после запятой необходимо вычислить значение функции.
Советы и рекомендации

Получить значение точности (эпсилон) можно, разделив 1 на 10, возведённую в степень, равную количеству знаков после запятой.

Для x = 0 и n = 1 вывод должен быть 1

Для x = 1 и n = 3 вывод должен быть 2,7182539682539684

Для x = 1 и n = 5 вывод должен быть 2,7182815255731922


Задание 2. Проблемы округления процентов
Что нужно сделать

В связи с особенностями хранения дробных чисел они не очень подходят для хранения денежных значений (может потеряться значимая часть при переполнении, да и дробная часть больше двух знаков не нужна). Но мы попробуем решить задачу начисления процентов, используя именно их.

    Пусть пользователь вводит сумму, которую он кладёт в банк, ежемесячный процент капитализации и количество лет, в течение которых будет открыт вклад.
    Необходимо ежемесячно пересчитывать сумму, округляя её до целого количества копеек в меньшую сторону. Например, если после начисления процентов остаток включает 35,78 копейки, то оставляем только 35 копеек, а дробную часть отбрасываем.
    По окончании работы программы необходимо вывести, какую сумму получит вкладчик на руки и какая сумма будет зачислена в пользу банка за счёт округления копеек.

Советы и рекомендации

Для округления копеек можно умножить получившееся после капитализации процентов число на 100, округлить в меньшую сторону, затем поделить опять на 100. Отбрасываемую часть можно получить вычитанием текущего значения остатка на счёте и того, который был до округления.

Для 1000 рублей, 1% и одного года программа должна вывести 1126,78 и 0,04350000000022192 (возможно меньше знаков).

Для 1000 рублей, 1% и десяти лет программа должна вывести 3299,41 и 0,5216000000013992 (возможно меньше знаков).


Что оценивается

    Код программы отформатирован.
    Программа выполняется без ошибок.
    Вычисления выполняются в отдельной строке. */

package main

//Задание 1. Разложение ex в ряд Тейлора

import (
	"fmt"
	"math"
)

func main() {
	var x float64
	var n int

	// Вводим значение x и точность вычисления
	fmt.Print("Введите значение x: ")
	fmt.Scan(&x)

	fmt.Print("Введите точность вычисления (количество знаков после запятой): ")
	fmt.Scan(&n)

	// Вычисляем значение экспоненты
	sum := 1.0
	term := 1.0
	i := 1

	for {
		term *= x / float64(i)
		sum += term

		if math.Abs(term) < math.Pow10(-n) {
			break
		}

		i++
	}

	// Выводим результат
	fmt.Printf("exp(%.2f) с точностью %d знаков после запятой: %.15f", x, n, sum)
}
