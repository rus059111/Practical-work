/* Цель практической работы

Закрепить на практике полученные знания работы с файловой системой, пакетами os, io, ioutil, интерфейсом io.Reader и уровнями доступа.


Что входит в работу

    Работа с файлами.
    Интерфейс io.Reader.
    Уровни доступа.
    Пакет ioutil.
    Комбинации круглых скобок.*

Задания со “*” выполняется по желанию — необязательное, повышенной сложности, требует самостоятельного изучения дополнительного материала.


Задание 1. Работа с файлами
Что нужно сделать

Напишите программу, которая на вход получала бы строку, введённую пользователем, а в файл писала № строки, дату и сообщение в формате:

2020-02-10 15:00:00 продам гараж.

При вводе слова exit программа завершает работу.


Задание 2. Интерфейс io.Reader
Что нужно сделать

Напишите программу, которая читает и выводит в консоль строки из файла, созданного в предыдущей практике, без использования ioutil. Если файл отсутствует или пуст, выведите в консоль соответствующее сообщение.
Рекомендация

Для получения размера файла воспользуйтесь методом Stat(), который возвращает информацию о файле и ошибку.


Задание 3. Уровни доступа
Что нужно сделать

Напишите программу, создающую текстовый файл только для чтения, и проверьте, что в него нельзя записать данные.
Рекомендация

Для проверки создайте файл, установите режим только для чтения, закройте его, а затем, открыв, попытайтесь прочесть из него данные.


Задание 4. Пакет ioutil
Что нужно сделать

Перепишите задачи 1 и 2, используя пакет ioutil.


Задание 5 (по желанию). Комбинации круглых скобок
Что нужно сделать

Напишите программу, которая на вход принимала бы интовое число и для него генерировала бы все возможные комбинации круглых скобок.
Рекомендация

Первый пример вывода программы:

Введите количество пар скобок:
3
["((()))","(()())","(())()","()(())","()()()"]

Второй пример вывода программы:

Введите количество пар скобок:
1
["()"]


Что оценивается

    Код программы отформатирован.
    Программа выполняется без ошибок.
    Вычисления выполняются в отдельной строке. */

package main

import (
	"fmt"
	"os"
	"time"
)

func main() {
	// Открываем файл для записи
	file, err := os.Create("log.txt")
	if err != nil {
		panic(err)
	}
	defer file.Close()

	lineNumber := 1

	for {

		fmt.Print("Введите строку: ")
		var Text string
		fmt.Scanln(&Text)
		now := time.Now()
		if Text == "exit" {
			break
		}
		s := fmt.Sprintf("%d %s %s\n", lineNumber, now.Format("2006-01-02 15:04:05"), Text)

		file.WriteString(s)

		lineNumber++
	}
}
